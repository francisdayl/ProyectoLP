Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADD
    COMMA
    COMPARETO
    CONSOLE
    ELSE
    ENUM
    EQUALS
    EVENT
    FOREACH
    IN
    ITEM
    LIST
    NEW
    NULL
    POINT
    REMOVE
    REMOVEAT
    SIZEOF
    STRING
    TUPLE
    TYPEOF
    WRITE
    WRITELINE

Grammar

Rule 0     S' -> expression
Rule 1     expression -> term
Rule 2     expression -> datos declaracion
Rule 3     expression -> declaracion
Rule 4     expression -> expression opmat term
Rule 5     expression -> condicional
Rule 6     expression -> expresionlogic
Rule 7     expression -> expresionlogic connectlog expresionlogic
Rule 8     expresionlogic -> term oplog term
Rule 9     expresionlogic -> TRUE
Rule 10    expresionlogic -> FALSE
Rule 11    expression -> VARIABLE assignacion SEMICOLON
Rule 12    expression -> assignacion VARIABLE SEMICOLON
Rule 13    oper -> VARIABLE assignacion
Rule 14    oper -> assignacion VARIABLE
Rule 15    expression -> WHILE condicional LBRACKET expression RBRACKET
Rule 16    expression -> FOR LPAREN datos declaracion expresionlogic SEMICOLON oper RPAREN LBRACKET expression RBRACKET
Rule 17    expression -> IF condicional LBRACKET expression RBRACKET
Rule 18    condicional -> LPAREN expresionlogic RPAREN
Rule 19    declaracion -> VARIABLE ASSIGNMENT expression SEMICOLON
Rule 20    connectlog -> AND
Rule 21    connectlog -> OR
Rule 22    oplog -> EQUAL
Rule 23    oplog -> NOTEQUAL
Rule 24    oplog -> GREATERTHAN
Rule 25    oplog -> GREATERTHANEQUAL
Rule 26    oplog -> LESSERTHAN
Rule 27    oplog -> LESSERTHANEQUAL
Rule 28    opmat -> PLUS
Rule 29    opmat -> MINUS
Rule 30    opmat -> TIMES
Rule 31    opmat -> DIVIDE
Rule 32    opmat -> MOD
Rule 33    assignacion -> INCREMENT
Rule 34    assignacion -> DECREMENT
Rule 35    assignacion -> COMPASSIGPLUS
Rule 36    assignacion -> COMPASSIGMINUS
Rule 37    assignacion -> COMPASSIGTIMES
Rule 38    assignacion -> COMPASSIGDIVIDE
Rule 39    term -> factor
Rule 40    factor -> VARIABLE
Rule 41    term -> NUMBER
Rule 42    datos -> BOOL
Rule 43    datos -> BYTE
Rule 44    datos -> CHAR
Rule 45    datos -> DECIMAL
Rule 46    datos -> DOUBLE
Rule 47    datos -> FLOAT
Rule 48    datos -> INT
Rule 49    datos -> LONG
Rule 50    datos -> SBYTE
Rule 51    datos -> SHORT
Rule 52    datos -> UINT
Rule 53    datos -> ULONG
Rule 54    datos -> USHORT

Terminals, with rules where they appear

ADD                  : 
AND                  : 20
ASSIGNMENT           : 19
BOOL                 : 42
BYTE                 : 43
CHAR                 : 44
COMMA                : 
COMPARETO            : 
COMPASSIGDIVIDE      : 38
COMPASSIGMINUS       : 36
COMPASSIGPLUS        : 35
COMPASSIGTIMES       : 37
CONSOLE              : 
DECIMAL              : 45
DECREMENT            : 34
DIVIDE               : 31
DOUBLE               : 46
ELSE                 : 
ENUM                 : 
EQUAL                : 22
EQUALS               : 
EVENT                : 
FALSE                : 10
FLOAT                : 47
FOR                  : 16
FOREACH              : 
GREATERTHAN          : 24
GREATERTHANEQUAL     : 25
IF                   : 17
IN                   : 
INCREMENT            : 33
INT                  : 48
ITEM                 : 
LBRACKET             : 15 16 17
LESSERTHAN           : 26
LESSERTHANEQUAL      : 27
LIST                 : 
LONG                 : 49
LPAREN               : 16 18
MINUS                : 29
MOD                  : 32
NEW                  : 
NOTEQUAL             : 23
NULL                 : 
NUMBER               : 41
OR                   : 21
PLUS                 : 28
POINT                : 
RBRACKET             : 15 16 17
REMOVE               : 
REMOVEAT             : 
RPAREN               : 16 18
SBYTE                : 50
SEMICOLON            : 11 12 16 19
SHORT                : 51
SIZEOF               : 
STRING               : 
TIMES                : 30
TRUE                 : 9
TUPLE                : 
TYPEOF               : 
UINT                 : 52
ULONG                : 53
USHORT               : 54
VARIABLE             : 11 12 13 14 19 40
WHILE                : 15
WRITE                : 
WRITELINE            : 
error                : 

Nonterminals, with rules where they appear

assignacion          : 11 12 13 14
condicional          : 5 15 17
connectlog           : 7
datos                : 2 16
declaracion          : 2 3 16
expresionlogic       : 6 7 7 16 18
expression           : 4 15 16 17 19 0
factor               : 39
oper                 : 16
oplog                : 8
opmat                : 4
term                 : 1 4 8 8

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . term
    (2) expression -> . datos declaracion
    (3) expression -> . declaracion
    (4) expression -> . expression opmat term
    (5) expression -> . condicional
    (6) expression -> . expresionlogic
    (7) expression -> . expresionlogic connectlog expresionlogic
    (11) expression -> . VARIABLE assignacion SEMICOLON
    (12) expression -> . assignacion VARIABLE SEMICOLON
    (15) expression -> . WHILE condicional LBRACKET expression RBRACKET
    (16) expression -> . FOR LPAREN datos declaracion expresionlogic SEMICOLON oper RPAREN LBRACKET expression RBRACKET
    (17) expression -> . IF condicional LBRACKET expression RBRACKET
    (39) term -> . factor
    (41) term -> . NUMBER
    (42) datos -> . BOOL
    (43) datos -> . BYTE
    (44) datos -> . CHAR
    (45) datos -> . DECIMAL
    (46) datos -> . DOUBLE
    (47) datos -> . FLOAT
    (48) datos -> . INT
    (49) datos -> . LONG
    (50) datos -> . SBYTE
    (51) datos -> . SHORT
    (52) datos -> . UINT
    (53) datos -> . ULONG
    (54) datos -> . USHORT
    (19) declaracion -> . VARIABLE ASSIGNMENT expression SEMICOLON
    (18) condicional -> . LPAREN expresionlogic RPAREN
    (8) expresionlogic -> . term oplog term
    (9) expresionlogic -> . TRUE
    (10) expresionlogic -> . FALSE
    (33) assignacion -> . INCREMENT
    (34) assignacion -> . DECREMENT
    (35) assignacion -> . COMPASSIGPLUS
    (36) assignacion -> . COMPASSIGMINUS
    (37) assignacion -> . COMPASSIGTIMES
    (38) assignacion -> . COMPASSIGDIVIDE
    (40) factor -> . VARIABLE

    VARIABLE        shift and go to state 7
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    IF              shift and go to state 12
    NUMBER          shift and go to state 14
    BOOL            shift and go to state 15
    BYTE            shift and go to state 16
    CHAR            shift and go to state 17
    DECIMAL         shift and go to state 18
    DOUBLE          shift and go to state 19
    FLOAT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    SBYTE           shift and go to state 23
    SHORT           shift and go to state 24
    UINT            shift and go to state 25
    ULONG           shift and go to state 26
    USHORT          shift and go to state 27
    LPAREN          shift and go to state 11
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    COMPASSIGPLUS   shift and go to state 32
    COMPASSIGMINUS  shift and go to state 33
    COMPASSIGTIMES  shift and go to state 34
    COMPASSIGDIVIDE shift and go to state 35

    expression                     shift and go to state 1
    term                           shift and go to state 2
    datos                          shift and go to state 3
    declaracion                    shift and go to state 4
    condicional                    shift and go to state 5
    expresionlogic                 shift and go to state 6
    assignacion                    shift and go to state 8
    factor                         shift and go to state 13

state 1

    (0) S' -> expression .
    (4) expression -> expression . opmat term
    (28) opmat -> . PLUS
    (29) opmat -> . MINUS
    (30) opmat -> . TIMES
    (31) opmat -> . DIVIDE
    (32) opmat -> . MOD

    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    MOD             shift and go to state 41

    opmat                          shift and go to state 36

state 2

    (1) expression -> term .
    (8) expresionlogic -> term . oplog term
    (22) oplog -> . EQUAL
    (23) oplog -> . NOTEQUAL
    (24) oplog -> . GREATERTHAN
    (25) oplog -> . GREATERTHANEQUAL
    (26) oplog -> . LESSERTHAN
    (27) oplog -> . LESSERTHANEQUAL

    PLUS            reduce using rule 1 (expression -> term .)
    MINUS           reduce using rule 1 (expression -> term .)
    TIMES           reduce using rule 1 (expression -> term .)
    DIVIDE          reduce using rule 1 (expression -> term .)
    MOD             reduce using rule 1 (expression -> term .)
    $end            reduce using rule 1 (expression -> term .)
    SEMICOLON       reduce using rule 1 (expression -> term .)
    RBRACKET        reduce using rule 1 (expression -> term .)
    EQUAL           shift and go to state 43
    NOTEQUAL        shift and go to state 44
    GREATERTHAN     shift and go to state 45
    GREATERTHANEQUAL shift and go to state 46
    LESSERTHAN      shift and go to state 47
    LESSERTHANEQUAL shift and go to state 48

    oplog                          shift and go to state 42

state 3

    (2) expression -> datos . declaracion
    (19) declaracion -> . VARIABLE ASSIGNMENT expression SEMICOLON

    VARIABLE        shift and go to state 50

    declaracion                    shift and go to state 49

state 4

    (3) expression -> declaracion .

    PLUS            reduce using rule 3 (expression -> declaracion .)
    MINUS           reduce using rule 3 (expression -> declaracion .)
    TIMES           reduce using rule 3 (expression -> declaracion .)
    DIVIDE          reduce using rule 3 (expression -> declaracion .)
    MOD             reduce using rule 3 (expression -> declaracion .)
    $end            reduce using rule 3 (expression -> declaracion .)
    SEMICOLON       reduce using rule 3 (expression -> declaracion .)
    RBRACKET        reduce using rule 3 (expression -> declaracion .)


state 5

    (5) expression -> condicional .

    PLUS            reduce using rule 5 (expression -> condicional .)
    MINUS           reduce using rule 5 (expression -> condicional .)
    TIMES           reduce using rule 5 (expression -> condicional .)
    DIVIDE          reduce using rule 5 (expression -> condicional .)
    MOD             reduce using rule 5 (expression -> condicional .)
    $end            reduce using rule 5 (expression -> condicional .)
    SEMICOLON       reduce using rule 5 (expression -> condicional .)
    RBRACKET        reduce using rule 5 (expression -> condicional .)


state 6

    (6) expression -> expresionlogic .
    (7) expression -> expresionlogic . connectlog expresionlogic
    (20) connectlog -> . AND
    (21) connectlog -> . OR

    PLUS            reduce using rule 6 (expression -> expresionlogic .)
    MINUS           reduce using rule 6 (expression -> expresionlogic .)
    TIMES           reduce using rule 6 (expression -> expresionlogic .)
    DIVIDE          reduce using rule 6 (expression -> expresionlogic .)
    MOD             reduce using rule 6 (expression -> expresionlogic .)
    $end            reduce using rule 6 (expression -> expresionlogic .)
    SEMICOLON       reduce using rule 6 (expression -> expresionlogic .)
    RBRACKET        reduce using rule 6 (expression -> expresionlogic .)
    AND             shift and go to state 52
    OR              shift and go to state 53

    connectlog                     shift and go to state 51

state 7

    (11) expression -> VARIABLE . assignacion SEMICOLON
    (19) declaracion -> VARIABLE . ASSIGNMENT expression SEMICOLON
    (40) factor -> VARIABLE .
    (33) assignacion -> . INCREMENT
    (34) assignacion -> . DECREMENT
    (35) assignacion -> . COMPASSIGPLUS
    (36) assignacion -> . COMPASSIGMINUS
    (37) assignacion -> . COMPASSIGTIMES
    (38) assignacion -> . COMPASSIGDIVIDE

    ASSIGNMENT      shift and go to state 55
    EQUAL           reduce using rule 40 (factor -> VARIABLE .)
    NOTEQUAL        reduce using rule 40 (factor -> VARIABLE .)
    GREATERTHAN     reduce using rule 40 (factor -> VARIABLE .)
    GREATERTHANEQUAL reduce using rule 40 (factor -> VARIABLE .)
    LESSERTHAN      reduce using rule 40 (factor -> VARIABLE .)
    LESSERTHANEQUAL reduce using rule 40 (factor -> VARIABLE .)
    PLUS            reduce using rule 40 (factor -> VARIABLE .)
    MINUS           reduce using rule 40 (factor -> VARIABLE .)
    TIMES           reduce using rule 40 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 40 (factor -> VARIABLE .)
    MOD             reduce using rule 40 (factor -> VARIABLE .)
    $end            reduce using rule 40 (factor -> VARIABLE .)
    SEMICOLON       reduce using rule 40 (factor -> VARIABLE .)
    RBRACKET        reduce using rule 40 (factor -> VARIABLE .)
    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    COMPASSIGPLUS   shift and go to state 32
    COMPASSIGMINUS  shift and go to state 33
    COMPASSIGTIMES  shift and go to state 34
    COMPASSIGDIVIDE shift and go to state 35

    assignacion                    shift and go to state 54

state 8

    (12) expression -> assignacion . VARIABLE SEMICOLON

    VARIABLE        shift and go to state 56


state 9

    (15) expression -> WHILE . condicional LBRACKET expression RBRACKET
    (18) condicional -> . LPAREN expresionlogic RPAREN

    LPAREN          shift and go to state 11

    condicional                    shift and go to state 57

state 10

    (16) expression -> FOR . LPAREN datos declaracion expresionlogic SEMICOLON oper RPAREN LBRACKET expression RBRACKET

    LPAREN          shift and go to state 58


state 11

    (18) condicional -> LPAREN . expresionlogic RPAREN
    (8) expresionlogic -> . term oplog term
    (9) expresionlogic -> . TRUE
    (10) expresionlogic -> . FALSE
    (39) term -> . factor
    (41) term -> . NUMBER
    (40) factor -> . VARIABLE

    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    NUMBER          shift and go to state 14
    VARIABLE        shift and go to state 61

    expresionlogic                 shift and go to state 59
    term                           shift and go to state 60
    factor                         shift and go to state 13

state 12

    (17) expression -> IF . condicional LBRACKET expression RBRACKET
    (18) condicional -> . LPAREN expresionlogic RPAREN

    LPAREN          shift and go to state 11

    condicional                    shift and go to state 62

state 13

    (39) term -> factor .

    EQUAL           reduce using rule 39 (term -> factor .)
    NOTEQUAL        reduce using rule 39 (term -> factor .)
    GREATERTHAN     reduce using rule 39 (term -> factor .)
    GREATERTHANEQUAL reduce using rule 39 (term -> factor .)
    LESSERTHAN      reduce using rule 39 (term -> factor .)
    LESSERTHANEQUAL reduce using rule 39 (term -> factor .)
    PLUS            reduce using rule 39 (term -> factor .)
    MINUS           reduce using rule 39 (term -> factor .)
    TIMES           reduce using rule 39 (term -> factor .)
    DIVIDE          reduce using rule 39 (term -> factor .)
    MOD             reduce using rule 39 (term -> factor .)
    $end            reduce using rule 39 (term -> factor .)
    SEMICOLON       reduce using rule 39 (term -> factor .)
    RBRACKET        reduce using rule 39 (term -> factor .)
    AND             reduce using rule 39 (term -> factor .)
    OR              reduce using rule 39 (term -> factor .)
    RPAREN          reduce using rule 39 (term -> factor .)


state 14

    (41) term -> NUMBER .

    EQUAL           reduce using rule 41 (term -> NUMBER .)
    NOTEQUAL        reduce using rule 41 (term -> NUMBER .)
    GREATERTHAN     reduce using rule 41 (term -> NUMBER .)
    GREATERTHANEQUAL reduce using rule 41 (term -> NUMBER .)
    LESSERTHAN      reduce using rule 41 (term -> NUMBER .)
    LESSERTHANEQUAL reduce using rule 41 (term -> NUMBER .)
    PLUS            reduce using rule 41 (term -> NUMBER .)
    MINUS           reduce using rule 41 (term -> NUMBER .)
    TIMES           reduce using rule 41 (term -> NUMBER .)
    DIVIDE          reduce using rule 41 (term -> NUMBER .)
    MOD             reduce using rule 41 (term -> NUMBER .)
    $end            reduce using rule 41 (term -> NUMBER .)
    SEMICOLON       reduce using rule 41 (term -> NUMBER .)
    RBRACKET        reduce using rule 41 (term -> NUMBER .)
    AND             reduce using rule 41 (term -> NUMBER .)
    OR              reduce using rule 41 (term -> NUMBER .)
    RPAREN          reduce using rule 41 (term -> NUMBER .)


state 15

    (42) datos -> BOOL .

    VARIABLE        reduce using rule 42 (datos -> BOOL .)


state 16

    (43) datos -> BYTE .

    VARIABLE        reduce using rule 43 (datos -> BYTE .)


state 17

    (44) datos -> CHAR .

    VARIABLE        reduce using rule 44 (datos -> CHAR .)


state 18

    (45) datos -> DECIMAL .

    VARIABLE        reduce using rule 45 (datos -> DECIMAL .)


state 19

    (46) datos -> DOUBLE .

    VARIABLE        reduce using rule 46 (datos -> DOUBLE .)


state 20

    (47) datos -> FLOAT .

    VARIABLE        reduce using rule 47 (datos -> FLOAT .)


state 21

    (48) datos -> INT .

    VARIABLE        reduce using rule 48 (datos -> INT .)


state 22

    (49) datos -> LONG .

    VARIABLE        reduce using rule 49 (datos -> LONG .)


state 23

    (50) datos -> SBYTE .

    VARIABLE        reduce using rule 50 (datos -> SBYTE .)


state 24

    (51) datos -> SHORT .

    VARIABLE        reduce using rule 51 (datos -> SHORT .)


state 25

    (52) datos -> UINT .

    VARIABLE        reduce using rule 52 (datos -> UINT .)


state 26

    (53) datos -> ULONG .

    VARIABLE        reduce using rule 53 (datos -> ULONG .)


state 27

    (54) datos -> USHORT .

    VARIABLE        reduce using rule 54 (datos -> USHORT .)


state 28

    (9) expresionlogic -> TRUE .

    AND             reduce using rule 9 (expresionlogic -> TRUE .)
    OR              reduce using rule 9 (expresionlogic -> TRUE .)
    PLUS            reduce using rule 9 (expresionlogic -> TRUE .)
    MINUS           reduce using rule 9 (expresionlogic -> TRUE .)
    TIMES           reduce using rule 9 (expresionlogic -> TRUE .)
    DIVIDE          reduce using rule 9 (expresionlogic -> TRUE .)
    MOD             reduce using rule 9 (expresionlogic -> TRUE .)
    $end            reduce using rule 9 (expresionlogic -> TRUE .)
    RPAREN          reduce using rule 9 (expresionlogic -> TRUE .)
    SEMICOLON       reduce using rule 9 (expresionlogic -> TRUE .)
    RBRACKET        reduce using rule 9 (expresionlogic -> TRUE .)


state 29

    (10) expresionlogic -> FALSE .

    AND             reduce using rule 10 (expresionlogic -> FALSE .)
    OR              reduce using rule 10 (expresionlogic -> FALSE .)
    PLUS            reduce using rule 10 (expresionlogic -> FALSE .)
    MINUS           reduce using rule 10 (expresionlogic -> FALSE .)
    TIMES           reduce using rule 10 (expresionlogic -> FALSE .)
    DIVIDE          reduce using rule 10 (expresionlogic -> FALSE .)
    MOD             reduce using rule 10 (expresionlogic -> FALSE .)
    $end            reduce using rule 10 (expresionlogic -> FALSE .)
    RPAREN          reduce using rule 10 (expresionlogic -> FALSE .)
    SEMICOLON       reduce using rule 10 (expresionlogic -> FALSE .)
    RBRACKET        reduce using rule 10 (expresionlogic -> FALSE .)


state 30

    (33) assignacion -> INCREMENT .

    VARIABLE        reduce using rule 33 (assignacion -> INCREMENT .)
    SEMICOLON       reduce using rule 33 (assignacion -> INCREMENT .)
    RPAREN          reduce using rule 33 (assignacion -> INCREMENT .)


state 31

    (34) assignacion -> DECREMENT .

    VARIABLE        reduce using rule 34 (assignacion -> DECREMENT .)
    SEMICOLON       reduce using rule 34 (assignacion -> DECREMENT .)
    RPAREN          reduce using rule 34 (assignacion -> DECREMENT .)


state 32

    (35) assignacion -> COMPASSIGPLUS .

    VARIABLE        reduce using rule 35 (assignacion -> COMPASSIGPLUS .)
    SEMICOLON       reduce using rule 35 (assignacion -> COMPASSIGPLUS .)
    RPAREN          reduce using rule 35 (assignacion -> COMPASSIGPLUS .)


state 33

    (36) assignacion -> COMPASSIGMINUS .

    VARIABLE        reduce using rule 36 (assignacion -> COMPASSIGMINUS .)
    SEMICOLON       reduce using rule 36 (assignacion -> COMPASSIGMINUS .)
    RPAREN          reduce using rule 36 (assignacion -> COMPASSIGMINUS .)


state 34

    (37) assignacion -> COMPASSIGTIMES .

    VARIABLE        reduce using rule 37 (assignacion -> COMPASSIGTIMES .)
    SEMICOLON       reduce using rule 37 (assignacion -> COMPASSIGTIMES .)
    RPAREN          reduce using rule 37 (assignacion -> COMPASSIGTIMES .)


state 35

    (38) assignacion -> COMPASSIGDIVIDE .

    VARIABLE        reduce using rule 38 (assignacion -> COMPASSIGDIVIDE .)
    SEMICOLON       reduce using rule 38 (assignacion -> COMPASSIGDIVIDE .)
    RPAREN          reduce using rule 38 (assignacion -> COMPASSIGDIVIDE .)


state 36

    (4) expression -> expression opmat . term
    (39) term -> . factor
    (41) term -> . NUMBER
    (40) factor -> . VARIABLE

    NUMBER          shift and go to state 14
    VARIABLE        shift and go to state 61

    term                           shift and go to state 63
    factor                         shift and go to state 13

state 37

    (28) opmat -> PLUS .

    NUMBER          reduce using rule 28 (opmat -> PLUS .)
    VARIABLE        reduce using rule 28 (opmat -> PLUS .)


state 38

    (29) opmat -> MINUS .

    NUMBER          reduce using rule 29 (opmat -> MINUS .)
    VARIABLE        reduce using rule 29 (opmat -> MINUS .)


state 39

    (30) opmat -> TIMES .

    NUMBER          reduce using rule 30 (opmat -> TIMES .)
    VARIABLE        reduce using rule 30 (opmat -> TIMES .)


state 40

    (31) opmat -> DIVIDE .

    NUMBER          reduce using rule 31 (opmat -> DIVIDE .)
    VARIABLE        reduce using rule 31 (opmat -> DIVIDE .)


state 41

    (32) opmat -> MOD .

    NUMBER          reduce using rule 32 (opmat -> MOD .)
    VARIABLE        reduce using rule 32 (opmat -> MOD .)


state 42

    (8) expresionlogic -> term oplog . term
    (39) term -> . factor
    (41) term -> . NUMBER
    (40) factor -> . VARIABLE

    NUMBER          shift and go to state 14
    VARIABLE        shift and go to state 61

    term                           shift and go to state 64
    factor                         shift and go to state 13

state 43

    (22) oplog -> EQUAL .

    NUMBER          reduce using rule 22 (oplog -> EQUAL .)
    VARIABLE        reduce using rule 22 (oplog -> EQUAL .)


state 44

    (23) oplog -> NOTEQUAL .

    NUMBER          reduce using rule 23 (oplog -> NOTEQUAL .)
    VARIABLE        reduce using rule 23 (oplog -> NOTEQUAL .)


state 45

    (24) oplog -> GREATERTHAN .

    NUMBER          reduce using rule 24 (oplog -> GREATERTHAN .)
    VARIABLE        reduce using rule 24 (oplog -> GREATERTHAN .)


state 46

    (25) oplog -> GREATERTHANEQUAL .

    NUMBER          reduce using rule 25 (oplog -> GREATERTHANEQUAL .)
    VARIABLE        reduce using rule 25 (oplog -> GREATERTHANEQUAL .)


state 47

    (26) oplog -> LESSERTHAN .

    NUMBER          reduce using rule 26 (oplog -> LESSERTHAN .)
    VARIABLE        reduce using rule 26 (oplog -> LESSERTHAN .)


state 48

    (27) oplog -> LESSERTHANEQUAL .

    NUMBER          reduce using rule 27 (oplog -> LESSERTHANEQUAL .)
    VARIABLE        reduce using rule 27 (oplog -> LESSERTHANEQUAL .)


state 49

    (2) expression -> datos declaracion .

    PLUS            reduce using rule 2 (expression -> datos declaracion .)
    MINUS           reduce using rule 2 (expression -> datos declaracion .)
    TIMES           reduce using rule 2 (expression -> datos declaracion .)
    DIVIDE          reduce using rule 2 (expression -> datos declaracion .)
    MOD             reduce using rule 2 (expression -> datos declaracion .)
    $end            reduce using rule 2 (expression -> datos declaracion .)
    SEMICOLON       reduce using rule 2 (expression -> datos declaracion .)
    RBRACKET        reduce using rule 2 (expression -> datos declaracion .)


state 50

    (19) declaracion -> VARIABLE . ASSIGNMENT expression SEMICOLON

    ASSIGNMENT      shift and go to state 55


state 51

    (7) expression -> expresionlogic connectlog . expresionlogic
    (8) expresionlogic -> . term oplog term
    (9) expresionlogic -> . TRUE
    (10) expresionlogic -> . FALSE
    (39) term -> . factor
    (41) term -> . NUMBER
    (40) factor -> . VARIABLE

    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    NUMBER          shift and go to state 14
    VARIABLE        shift and go to state 61

    expresionlogic                 shift and go to state 65
    term                           shift and go to state 60
    factor                         shift and go to state 13

state 52

    (20) connectlog -> AND .

    TRUE            reduce using rule 20 (connectlog -> AND .)
    FALSE           reduce using rule 20 (connectlog -> AND .)
    NUMBER          reduce using rule 20 (connectlog -> AND .)
    VARIABLE        reduce using rule 20 (connectlog -> AND .)


state 53

    (21) connectlog -> OR .

    TRUE            reduce using rule 21 (connectlog -> OR .)
    FALSE           reduce using rule 21 (connectlog -> OR .)
    NUMBER          reduce using rule 21 (connectlog -> OR .)
    VARIABLE        reduce using rule 21 (connectlog -> OR .)


state 54

    (11) expression -> VARIABLE assignacion . SEMICOLON

    SEMICOLON       shift and go to state 66


state 55

    (19) declaracion -> VARIABLE ASSIGNMENT . expression SEMICOLON
    (1) expression -> . term
    (2) expression -> . datos declaracion
    (3) expression -> . declaracion
    (4) expression -> . expression opmat term
    (5) expression -> . condicional
    (6) expression -> . expresionlogic
    (7) expression -> . expresionlogic connectlog expresionlogic
    (11) expression -> . VARIABLE assignacion SEMICOLON
    (12) expression -> . assignacion VARIABLE SEMICOLON
    (15) expression -> . WHILE condicional LBRACKET expression RBRACKET
    (16) expression -> . FOR LPAREN datos declaracion expresionlogic SEMICOLON oper RPAREN LBRACKET expression RBRACKET
    (17) expression -> . IF condicional LBRACKET expression RBRACKET
    (39) term -> . factor
    (41) term -> . NUMBER
    (42) datos -> . BOOL
    (43) datos -> . BYTE
    (44) datos -> . CHAR
    (45) datos -> . DECIMAL
    (46) datos -> . DOUBLE
    (47) datos -> . FLOAT
    (48) datos -> . INT
    (49) datos -> . LONG
    (50) datos -> . SBYTE
    (51) datos -> . SHORT
    (52) datos -> . UINT
    (53) datos -> . ULONG
    (54) datos -> . USHORT
    (19) declaracion -> . VARIABLE ASSIGNMENT expression SEMICOLON
    (18) condicional -> . LPAREN expresionlogic RPAREN
    (8) expresionlogic -> . term oplog term
    (9) expresionlogic -> . TRUE
    (10) expresionlogic -> . FALSE
    (33) assignacion -> . INCREMENT
    (34) assignacion -> . DECREMENT
    (35) assignacion -> . COMPASSIGPLUS
    (36) assignacion -> . COMPASSIGMINUS
    (37) assignacion -> . COMPASSIGTIMES
    (38) assignacion -> . COMPASSIGDIVIDE
    (40) factor -> . VARIABLE

    VARIABLE        shift and go to state 7
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    IF              shift and go to state 12
    NUMBER          shift and go to state 14
    BOOL            shift and go to state 15
    BYTE            shift and go to state 16
    CHAR            shift and go to state 17
    DECIMAL         shift and go to state 18
    DOUBLE          shift and go to state 19
    FLOAT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    SBYTE           shift and go to state 23
    SHORT           shift and go to state 24
    UINT            shift and go to state 25
    ULONG           shift and go to state 26
    USHORT          shift and go to state 27
    LPAREN          shift and go to state 11
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    COMPASSIGPLUS   shift and go to state 32
    COMPASSIGMINUS  shift and go to state 33
    COMPASSIGTIMES  shift and go to state 34
    COMPASSIGDIVIDE shift and go to state 35

    expression                     shift and go to state 67
    term                           shift and go to state 2
    datos                          shift and go to state 3
    declaracion                    shift and go to state 4
    condicional                    shift and go to state 5
    expresionlogic                 shift and go to state 6
    assignacion                    shift and go to state 8
    factor                         shift and go to state 13

state 56

    (12) expression -> assignacion VARIABLE . SEMICOLON

    SEMICOLON       shift and go to state 68


state 57

    (15) expression -> WHILE condicional . LBRACKET expression RBRACKET

    LBRACKET        shift and go to state 69


state 58

    (16) expression -> FOR LPAREN . datos declaracion expresionlogic SEMICOLON oper RPAREN LBRACKET expression RBRACKET
    (42) datos -> . BOOL
    (43) datos -> . BYTE
    (44) datos -> . CHAR
    (45) datos -> . DECIMAL
    (46) datos -> . DOUBLE
    (47) datos -> . FLOAT
    (48) datos -> . INT
    (49) datos -> . LONG
    (50) datos -> . SBYTE
    (51) datos -> . SHORT
    (52) datos -> . UINT
    (53) datos -> . ULONG
    (54) datos -> . USHORT

    BOOL            shift and go to state 15
    BYTE            shift and go to state 16
    CHAR            shift and go to state 17
    DECIMAL         shift and go to state 18
    DOUBLE          shift and go to state 19
    FLOAT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    SBYTE           shift and go to state 23
    SHORT           shift and go to state 24
    UINT            shift and go to state 25
    ULONG           shift and go to state 26
    USHORT          shift and go to state 27

    datos                          shift and go to state 70

state 59

    (18) condicional -> LPAREN expresionlogic . RPAREN

    RPAREN          shift and go to state 71


state 60

    (8) expresionlogic -> term . oplog term
    (22) oplog -> . EQUAL
    (23) oplog -> . NOTEQUAL
    (24) oplog -> . GREATERTHAN
    (25) oplog -> . GREATERTHANEQUAL
    (26) oplog -> . LESSERTHAN
    (27) oplog -> . LESSERTHANEQUAL

    EQUAL           shift and go to state 43
    NOTEQUAL        shift and go to state 44
    GREATERTHAN     shift and go to state 45
    GREATERTHANEQUAL shift and go to state 46
    LESSERTHAN      shift and go to state 47
    LESSERTHANEQUAL shift and go to state 48

    oplog                          shift and go to state 42

state 61

    (40) factor -> VARIABLE .

    EQUAL           reduce using rule 40 (factor -> VARIABLE .)
    NOTEQUAL        reduce using rule 40 (factor -> VARIABLE .)
    GREATERTHAN     reduce using rule 40 (factor -> VARIABLE .)
    GREATERTHANEQUAL reduce using rule 40 (factor -> VARIABLE .)
    LESSERTHAN      reduce using rule 40 (factor -> VARIABLE .)
    LESSERTHANEQUAL reduce using rule 40 (factor -> VARIABLE .)
    PLUS            reduce using rule 40 (factor -> VARIABLE .)
    MINUS           reduce using rule 40 (factor -> VARIABLE .)
    TIMES           reduce using rule 40 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 40 (factor -> VARIABLE .)
    MOD             reduce using rule 40 (factor -> VARIABLE .)
    $end            reduce using rule 40 (factor -> VARIABLE .)
    SEMICOLON       reduce using rule 40 (factor -> VARIABLE .)
    RBRACKET        reduce using rule 40 (factor -> VARIABLE .)
    AND             reduce using rule 40 (factor -> VARIABLE .)
    OR              reduce using rule 40 (factor -> VARIABLE .)
    RPAREN          reduce using rule 40 (factor -> VARIABLE .)


state 62

    (17) expression -> IF condicional . LBRACKET expression RBRACKET

    LBRACKET        shift and go to state 72


state 63

    (4) expression -> expression opmat term .

    PLUS            reduce using rule 4 (expression -> expression opmat term .)
    MINUS           reduce using rule 4 (expression -> expression opmat term .)
    TIMES           reduce using rule 4 (expression -> expression opmat term .)
    DIVIDE          reduce using rule 4 (expression -> expression opmat term .)
    MOD             reduce using rule 4 (expression -> expression opmat term .)
    $end            reduce using rule 4 (expression -> expression opmat term .)
    SEMICOLON       reduce using rule 4 (expression -> expression opmat term .)
    RBRACKET        reduce using rule 4 (expression -> expression opmat term .)


state 64

    (8) expresionlogic -> term oplog term .

    AND             reduce using rule 8 (expresionlogic -> term oplog term .)
    OR              reduce using rule 8 (expresionlogic -> term oplog term .)
    PLUS            reduce using rule 8 (expresionlogic -> term oplog term .)
    MINUS           reduce using rule 8 (expresionlogic -> term oplog term .)
    TIMES           reduce using rule 8 (expresionlogic -> term oplog term .)
    DIVIDE          reduce using rule 8 (expresionlogic -> term oplog term .)
    MOD             reduce using rule 8 (expresionlogic -> term oplog term .)
    $end            reduce using rule 8 (expresionlogic -> term oplog term .)
    RPAREN          reduce using rule 8 (expresionlogic -> term oplog term .)
    SEMICOLON       reduce using rule 8 (expresionlogic -> term oplog term .)
    RBRACKET        reduce using rule 8 (expresionlogic -> term oplog term .)


state 65

    (7) expression -> expresionlogic connectlog expresionlogic .

    PLUS            reduce using rule 7 (expression -> expresionlogic connectlog expresionlogic .)
    MINUS           reduce using rule 7 (expression -> expresionlogic connectlog expresionlogic .)
    TIMES           reduce using rule 7 (expression -> expresionlogic connectlog expresionlogic .)
    DIVIDE          reduce using rule 7 (expression -> expresionlogic connectlog expresionlogic .)
    MOD             reduce using rule 7 (expression -> expresionlogic connectlog expresionlogic .)
    $end            reduce using rule 7 (expression -> expresionlogic connectlog expresionlogic .)
    SEMICOLON       reduce using rule 7 (expression -> expresionlogic connectlog expresionlogic .)
    RBRACKET        reduce using rule 7 (expression -> expresionlogic connectlog expresionlogic .)


state 66

    (11) expression -> VARIABLE assignacion SEMICOLON .

    PLUS            reduce using rule 11 (expression -> VARIABLE assignacion SEMICOLON .)
    MINUS           reduce using rule 11 (expression -> VARIABLE assignacion SEMICOLON .)
    TIMES           reduce using rule 11 (expression -> VARIABLE assignacion SEMICOLON .)
    DIVIDE          reduce using rule 11 (expression -> VARIABLE assignacion SEMICOLON .)
    MOD             reduce using rule 11 (expression -> VARIABLE assignacion SEMICOLON .)
    $end            reduce using rule 11 (expression -> VARIABLE assignacion SEMICOLON .)
    SEMICOLON       reduce using rule 11 (expression -> VARIABLE assignacion SEMICOLON .)
    RBRACKET        reduce using rule 11 (expression -> VARIABLE assignacion SEMICOLON .)


state 67

    (19) declaracion -> VARIABLE ASSIGNMENT expression . SEMICOLON
    (4) expression -> expression . opmat term
    (28) opmat -> . PLUS
    (29) opmat -> . MINUS
    (30) opmat -> . TIMES
    (31) opmat -> . DIVIDE
    (32) opmat -> . MOD

    SEMICOLON       shift and go to state 73
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    MOD             shift and go to state 41

    opmat                          shift and go to state 36

state 68

    (12) expression -> assignacion VARIABLE SEMICOLON .

    PLUS            reduce using rule 12 (expression -> assignacion VARIABLE SEMICOLON .)
    MINUS           reduce using rule 12 (expression -> assignacion VARIABLE SEMICOLON .)
    TIMES           reduce using rule 12 (expression -> assignacion VARIABLE SEMICOLON .)
    DIVIDE          reduce using rule 12 (expression -> assignacion VARIABLE SEMICOLON .)
    MOD             reduce using rule 12 (expression -> assignacion VARIABLE SEMICOLON .)
    $end            reduce using rule 12 (expression -> assignacion VARIABLE SEMICOLON .)
    SEMICOLON       reduce using rule 12 (expression -> assignacion VARIABLE SEMICOLON .)
    RBRACKET        reduce using rule 12 (expression -> assignacion VARIABLE SEMICOLON .)


state 69

    (15) expression -> WHILE condicional LBRACKET . expression RBRACKET
    (1) expression -> . term
    (2) expression -> . datos declaracion
    (3) expression -> . declaracion
    (4) expression -> . expression opmat term
    (5) expression -> . condicional
    (6) expression -> . expresionlogic
    (7) expression -> . expresionlogic connectlog expresionlogic
    (11) expression -> . VARIABLE assignacion SEMICOLON
    (12) expression -> . assignacion VARIABLE SEMICOLON
    (15) expression -> . WHILE condicional LBRACKET expression RBRACKET
    (16) expression -> . FOR LPAREN datos declaracion expresionlogic SEMICOLON oper RPAREN LBRACKET expression RBRACKET
    (17) expression -> . IF condicional LBRACKET expression RBRACKET
    (39) term -> . factor
    (41) term -> . NUMBER
    (42) datos -> . BOOL
    (43) datos -> . BYTE
    (44) datos -> . CHAR
    (45) datos -> . DECIMAL
    (46) datos -> . DOUBLE
    (47) datos -> . FLOAT
    (48) datos -> . INT
    (49) datos -> . LONG
    (50) datos -> . SBYTE
    (51) datos -> . SHORT
    (52) datos -> . UINT
    (53) datos -> . ULONG
    (54) datos -> . USHORT
    (19) declaracion -> . VARIABLE ASSIGNMENT expression SEMICOLON
    (18) condicional -> . LPAREN expresionlogic RPAREN
    (8) expresionlogic -> . term oplog term
    (9) expresionlogic -> . TRUE
    (10) expresionlogic -> . FALSE
    (33) assignacion -> . INCREMENT
    (34) assignacion -> . DECREMENT
    (35) assignacion -> . COMPASSIGPLUS
    (36) assignacion -> . COMPASSIGMINUS
    (37) assignacion -> . COMPASSIGTIMES
    (38) assignacion -> . COMPASSIGDIVIDE
    (40) factor -> . VARIABLE

    VARIABLE        shift and go to state 7
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    IF              shift and go to state 12
    NUMBER          shift and go to state 14
    BOOL            shift and go to state 15
    BYTE            shift and go to state 16
    CHAR            shift and go to state 17
    DECIMAL         shift and go to state 18
    DOUBLE          shift and go to state 19
    FLOAT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    SBYTE           shift and go to state 23
    SHORT           shift and go to state 24
    UINT            shift and go to state 25
    ULONG           shift and go to state 26
    USHORT          shift and go to state 27
    LPAREN          shift and go to state 11
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    COMPASSIGPLUS   shift and go to state 32
    COMPASSIGMINUS  shift and go to state 33
    COMPASSIGTIMES  shift and go to state 34
    COMPASSIGDIVIDE shift and go to state 35

    condicional                    shift and go to state 5
    expression                     shift and go to state 74
    term                           shift and go to state 2
    datos                          shift and go to state 3
    declaracion                    shift and go to state 4
    expresionlogic                 shift and go to state 6
    assignacion                    shift and go to state 8
    factor                         shift and go to state 13

state 70

    (16) expression -> FOR LPAREN datos . declaracion expresionlogic SEMICOLON oper RPAREN LBRACKET expression RBRACKET
    (19) declaracion -> . VARIABLE ASSIGNMENT expression SEMICOLON

    VARIABLE        shift and go to state 50

    declaracion                    shift and go to state 75

state 71

    (18) condicional -> LPAREN expresionlogic RPAREN .

    PLUS            reduce using rule 18 (condicional -> LPAREN expresionlogic RPAREN .)
    MINUS           reduce using rule 18 (condicional -> LPAREN expresionlogic RPAREN .)
    TIMES           reduce using rule 18 (condicional -> LPAREN expresionlogic RPAREN .)
    DIVIDE          reduce using rule 18 (condicional -> LPAREN expresionlogic RPAREN .)
    MOD             reduce using rule 18 (condicional -> LPAREN expresionlogic RPAREN .)
    $end            reduce using rule 18 (condicional -> LPAREN expresionlogic RPAREN .)
    LBRACKET        reduce using rule 18 (condicional -> LPAREN expresionlogic RPAREN .)
    SEMICOLON       reduce using rule 18 (condicional -> LPAREN expresionlogic RPAREN .)
    RBRACKET        reduce using rule 18 (condicional -> LPAREN expresionlogic RPAREN .)


state 72

    (17) expression -> IF condicional LBRACKET . expression RBRACKET
    (1) expression -> . term
    (2) expression -> . datos declaracion
    (3) expression -> . declaracion
    (4) expression -> . expression opmat term
    (5) expression -> . condicional
    (6) expression -> . expresionlogic
    (7) expression -> . expresionlogic connectlog expresionlogic
    (11) expression -> . VARIABLE assignacion SEMICOLON
    (12) expression -> . assignacion VARIABLE SEMICOLON
    (15) expression -> . WHILE condicional LBRACKET expression RBRACKET
    (16) expression -> . FOR LPAREN datos declaracion expresionlogic SEMICOLON oper RPAREN LBRACKET expression RBRACKET
    (17) expression -> . IF condicional LBRACKET expression RBRACKET
    (39) term -> . factor
    (41) term -> . NUMBER
    (42) datos -> . BOOL
    (43) datos -> . BYTE
    (44) datos -> . CHAR
    (45) datos -> . DECIMAL
    (46) datos -> . DOUBLE
    (47) datos -> . FLOAT
    (48) datos -> . INT
    (49) datos -> . LONG
    (50) datos -> . SBYTE
    (51) datos -> . SHORT
    (52) datos -> . UINT
    (53) datos -> . ULONG
    (54) datos -> . USHORT
    (19) declaracion -> . VARIABLE ASSIGNMENT expression SEMICOLON
    (18) condicional -> . LPAREN expresionlogic RPAREN
    (8) expresionlogic -> . term oplog term
    (9) expresionlogic -> . TRUE
    (10) expresionlogic -> . FALSE
    (33) assignacion -> . INCREMENT
    (34) assignacion -> . DECREMENT
    (35) assignacion -> . COMPASSIGPLUS
    (36) assignacion -> . COMPASSIGMINUS
    (37) assignacion -> . COMPASSIGTIMES
    (38) assignacion -> . COMPASSIGDIVIDE
    (40) factor -> . VARIABLE

    VARIABLE        shift and go to state 7
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    IF              shift and go to state 12
    NUMBER          shift and go to state 14
    BOOL            shift and go to state 15
    BYTE            shift and go to state 16
    CHAR            shift and go to state 17
    DECIMAL         shift and go to state 18
    DOUBLE          shift and go to state 19
    FLOAT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    SBYTE           shift and go to state 23
    SHORT           shift and go to state 24
    UINT            shift and go to state 25
    ULONG           shift and go to state 26
    USHORT          shift and go to state 27
    LPAREN          shift and go to state 11
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    COMPASSIGPLUS   shift and go to state 32
    COMPASSIGMINUS  shift and go to state 33
    COMPASSIGTIMES  shift and go to state 34
    COMPASSIGDIVIDE shift and go to state 35

    condicional                    shift and go to state 5
    expression                     shift and go to state 76
    term                           shift and go to state 2
    datos                          shift and go to state 3
    declaracion                    shift and go to state 4
    expresionlogic                 shift and go to state 6
    assignacion                    shift and go to state 8
    factor                         shift and go to state 13

state 73

    (19) declaracion -> VARIABLE ASSIGNMENT expression SEMICOLON .

    PLUS            reduce using rule 19 (declaracion -> VARIABLE ASSIGNMENT expression SEMICOLON .)
    MINUS           reduce using rule 19 (declaracion -> VARIABLE ASSIGNMENT expression SEMICOLON .)
    TIMES           reduce using rule 19 (declaracion -> VARIABLE ASSIGNMENT expression SEMICOLON .)
    DIVIDE          reduce using rule 19 (declaracion -> VARIABLE ASSIGNMENT expression SEMICOLON .)
    MOD             reduce using rule 19 (declaracion -> VARIABLE ASSIGNMENT expression SEMICOLON .)
    $end            reduce using rule 19 (declaracion -> VARIABLE ASSIGNMENT expression SEMICOLON .)
    SEMICOLON       reduce using rule 19 (declaracion -> VARIABLE ASSIGNMENT expression SEMICOLON .)
    RBRACKET        reduce using rule 19 (declaracion -> VARIABLE ASSIGNMENT expression SEMICOLON .)
    TRUE            reduce using rule 19 (declaracion -> VARIABLE ASSIGNMENT expression SEMICOLON .)
    FALSE           reduce using rule 19 (declaracion -> VARIABLE ASSIGNMENT expression SEMICOLON .)
    NUMBER          reduce using rule 19 (declaracion -> VARIABLE ASSIGNMENT expression SEMICOLON .)
    VARIABLE        reduce using rule 19 (declaracion -> VARIABLE ASSIGNMENT expression SEMICOLON .)


state 74

    (15) expression -> WHILE condicional LBRACKET expression . RBRACKET
    (4) expression -> expression . opmat term
    (28) opmat -> . PLUS
    (29) opmat -> . MINUS
    (30) opmat -> . TIMES
    (31) opmat -> . DIVIDE
    (32) opmat -> . MOD

    RBRACKET        shift and go to state 77
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    MOD             shift and go to state 41

    opmat                          shift and go to state 36

state 75

    (16) expression -> FOR LPAREN datos declaracion . expresionlogic SEMICOLON oper RPAREN LBRACKET expression RBRACKET
    (8) expresionlogic -> . term oplog term
    (9) expresionlogic -> . TRUE
    (10) expresionlogic -> . FALSE
    (39) term -> . factor
    (41) term -> . NUMBER
    (40) factor -> . VARIABLE

    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    NUMBER          shift and go to state 14
    VARIABLE        shift and go to state 61

    expresionlogic                 shift and go to state 78
    term                           shift and go to state 60
    factor                         shift and go to state 13

state 76

    (17) expression -> IF condicional LBRACKET expression . RBRACKET
    (4) expression -> expression . opmat term
    (28) opmat -> . PLUS
    (29) opmat -> . MINUS
    (30) opmat -> . TIMES
    (31) opmat -> . DIVIDE
    (32) opmat -> . MOD

    RBRACKET        shift and go to state 79
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    MOD             shift and go to state 41

    opmat                          shift and go to state 36

state 77

    (15) expression -> WHILE condicional LBRACKET expression RBRACKET .

    PLUS            reduce using rule 15 (expression -> WHILE condicional LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 15 (expression -> WHILE condicional LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 15 (expression -> WHILE condicional LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 15 (expression -> WHILE condicional LBRACKET expression RBRACKET .)
    MOD             reduce using rule 15 (expression -> WHILE condicional LBRACKET expression RBRACKET .)
    $end            reduce using rule 15 (expression -> WHILE condicional LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 15 (expression -> WHILE condicional LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 15 (expression -> WHILE condicional LBRACKET expression RBRACKET .)


state 78

    (16) expression -> FOR LPAREN datos declaracion expresionlogic . SEMICOLON oper RPAREN LBRACKET expression RBRACKET

    SEMICOLON       shift and go to state 80


state 79

    (17) expression -> IF condicional LBRACKET expression RBRACKET .

    PLUS            reduce using rule 17 (expression -> IF condicional LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 17 (expression -> IF condicional LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 17 (expression -> IF condicional LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 17 (expression -> IF condicional LBRACKET expression RBRACKET .)
    MOD             reduce using rule 17 (expression -> IF condicional LBRACKET expression RBRACKET .)
    $end            reduce using rule 17 (expression -> IF condicional LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 17 (expression -> IF condicional LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 17 (expression -> IF condicional LBRACKET expression RBRACKET .)


state 80

    (16) expression -> FOR LPAREN datos declaracion expresionlogic SEMICOLON . oper RPAREN LBRACKET expression RBRACKET
    (13) oper -> . VARIABLE assignacion
    (14) oper -> . assignacion VARIABLE
    (33) assignacion -> . INCREMENT
    (34) assignacion -> . DECREMENT
    (35) assignacion -> . COMPASSIGPLUS
    (36) assignacion -> . COMPASSIGMINUS
    (37) assignacion -> . COMPASSIGTIMES
    (38) assignacion -> . COMPASSIGDIVIDE

    VARIABLE        shift and go to state 82
    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    COMPASSIGPLUS   shift and go to state 32
    COMPASSIGMINUS  shift and go to state 33
    COMPASSIGTIMES  shift and go to state 34
    COMPASSIGDIVIDE shift and go to state 35

    oper                           shift and go to state 81
    assignacion                    shift and go to state 83

state 81

    (16) expression -> FOR LPAREN datos declaracion expresionlogic SEMICOLON oper . RPAREN LBRACKET expression RBRACKET

    RPAREN          shift and go to state 84


state 82

    (13) oper -> VARIABLE . assignacion
    (33) assignacion -> . INCREMENT
    (34) assignacion -> . DECREMENT
    (35) assignacion -> . COMPASSIGPLUS
    (36) assignacion -> . COMPASSIGMINUS
    (37) assignacion -> . COMPASSIGTIMES
    (38) assignacion -> . COMPASSIGDIVIDE

    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    COMPASSIGPLUS   shift and go to state 32
    COMPASSIGMINUS  shift and go to state 33
    COMPASSIGTIMES  shift and go to state 34
    COMPASSIGDIVIDE shift and go to state 35

    assignacion                    shift and go to state 85

state 83

    (14) oper -> assignacion . VARIABLE

    VARIABLE        shift and go to state 86


state 84

    (16) expression -> FOR LPAREN datos declaracion expresionlogic SEMICOLON oper RPAREN . LBRACKET expression RBRACKET

    LBRACKET        shift and go to state 87


state 85

    (13) oper -> VARIABLE assignacion .

    RPAREN          reduce using rule 13 (oper -> VARIABLE assignacion .)


state 86

    (14) oper -> assignacion VARIABLE .

    RPAREN          reduce using rule 14 (oper -> assignacion VARIABLE .)


state 87

    (16) expression -> FOR LPAREN datos declaracion expresionlogic SEMICOLON oper RPAREN LBRACKET . expression RBRACKET
    (1) expression -> . term
    (2) expression -> . datos declaracion
    (3) expression -> . declaracion
    (4) expression -> . expression opmat term
    (5) expression -> . condicional
    (6) expression -> . expresionlogic
    (7) expression -> . expresionlogic connectlog expresionlogic
    (11) expression -> . VARIABLE assignacion SEMICOLON
    (12) expression -> . assignacion VARIABLE SEMICOLON
    (15) expression -> . WHILE condicional LBRACKET expression RBRACKET
    (16) expression -> . FOR LPAREN datos declaracion expresionlogic SEMICOLON oper RPAREN LBRACKET expression RBRACKET
    (17) expression -> . IF condicional LBRACKET expression RBRACKET
    (39) term -> . factor
    (41) term -> . NUMBER
    (42) datos -> . BOOL
    (43) datos -> . BYTE
    (44) datos -> . CHAR
    (45) datos -> . DECIMAL
    (46) datos -> . DOUBLE
    (47) datos -> . FLOAT
    (48) datos -> . INT
    (49) datos -> . LONG
    (50) datos -> . SBYTE
    (51) datos -> . SHORT
    (52) datos -> . UINT
    (53) datos -> . ULONG
    (54) datos -> . USHORT
    (19) declaracion -> . VARIABLE ASSIGNMENT expression SEMICOLON
    (18) condicional -> . LPAREN expresionlogic RPAREN
    (8) expresionlogic -> . term oplog term
    (9) expresionlogic -> . TRUE
    (10) expresionlogic -> . FALSE
    (33) assignacion -> . INCREMENT
    (34) assignacion -> . DECREMENT
    (35) assignacion -> . COMPASSIGPLUS
    (36) assignacion -> . COMPASSIGMINUS
    (37) assignacion -> . COMPASSIGTIMES
    (38) assignacion -> . COMPASSIGDIVIDE
    (40) factor -> . VARIABLE

    VARIABLE        shift and go to state 7
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    IF              shift and go to state 12
    NUMBER          shift and go to state 14
    BOOL            shift and go to state 15
    BYTE            shift and go to state 16
    CHAR            shift and go to state 17
    DECIMAL         shift and go to state 18
    DOUBLE          shift and go to state 19
    FLOAT           shift and go to state 20
    INT             shift and go to state 21
    LONG            shift and go to state 22
    SBYTE           shift and go to state 23
    SHORT           shift and go to state 24
    UINT            shift and go to state 25
    ULONG           shift and go to state 26
    USHORT          shift and go to state 27
    LPAREN          shift and go to state 11
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    COMPASSIGPLUS   shift and go to state 32
    COMPASSIGMINUS  shift and go to state 33
    COMPASSIGTIMES  shift and go to state 34
    COMPASSIGDIVIDE shift and go to state 35

    datos                          shift and go to state 3
    declaracion                    shift and go to state 4
    expresionlogic                 shift and go to state 6
    expression                     shift and go to state 88
    term                           shift and go to state 2
    condicional                    shift and go to state 5
    assignacion                    shift and go to state 8
    factor                         shift and go to state 13

state 88

    (16) expression -> FOR LPAREN datos declaracion expresionlogic SEMICOLON oper RPAREN LBRACKET expression . RBRACKET
    (4) expression -> expression . opmat term
    (28) opmat -> . PLUS
    (29) opmat -> . MINUS
    (30) opmat -> . TIMES
    (31) opmat -> . DIVIDE
    (32) opmat -> . MOD

    RBRACKET        shift and go to state 89
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    MOD             shift and go to state 41

    opmat                          shift and go to state 36

state 89

    (16) expression -> FOR LPAREN datos declaracion expresionlogic SEMICOLON oper RPAREN LBRACKET expression RBRACKET .

    PLUS            reduce using rule 16 (expression -> FOR LPAREN datos declaracion expresionlogic SEMICOLON oper RPAREN LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 16 (expression -> FOR LPAREN datos declaracion expresionlogic SEMICOLON oper RPAREN LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 16 (expression -> FOR LPAREN datos declaracion expresionlogic SEMICOLON oper RPAREN LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 16 (expression -> FOR LPAREN datos declaracion expresionlogic SEMICOLON oper RPAREN LBRACKET expression RBRACKET .)
    MOD             reduce using rule 16 (expression -> FOR LPAREN datos declaracion expresionlogic SEMICOLON oper RPAREN LBRACKET expression RBRACKET .)
    $end            reduce using rule 16 (expression -> FOR LPAREN datos declaracion expresionlogic SEMICOLON oper RPAREN LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 16 (expression -> FOR LPAREN datos declaracion expresionlogic SEMICOLON oper RPAREN LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 16 (expression -> FOR LPAREN datos declaracion expresionlogic SEMICOLON oper RPAREN LBRACKET expression RBRACKET .)

