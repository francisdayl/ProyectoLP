
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD AND ASSIGNMENT BOOL BYTE CHAR COMMA COMPARETO COMPASSIGDIVIDE COMPASSIGMINUS COMPASSIGPLUS COMPASSIGTIMES CONSOLE DECIMAL DECREMENT DIVIDE DOUBLE ELSE ENUM EQUAL EQUALS EVENT FALSE FLOAT FOR FOREACH GREATERTHAN GREATERTHANEQUAL IF IN INCREMENT INT ITEM LBRACKET LESSERTHAN LESSERTHANEQUAL LIST LONG LPAREN MINUS MOD NEW NOTEQUAL NULL NUMBER OR PLUS POINT RBRACKET REMOVE REMOVEAT RPAREN SBYTE SEMICOLON SHORT SIZEOF STRING TIMES TRUE TUPLE TYPEOF UINT ULONG USHORT VARIABLE WHILE WRITE WRITELINEexpression : termexpression : datos declaracion\n    | declaracionexpression : term opmat expressionexpression : condicionalexpression : expresionlogic\n    | expresionlogic connectlog expresionlogicexpresionlogic : term oplog termexpresionlogic : TRUE\n    | FALSEexpression : VARIABLE assignacion SEMICOLONexpression : assignacion VARIABLE SEMICOLONoper : VARIABLE assignacionoper : assignacion VARIABLEexpression : WHILE condicional LBRACKET expression RBRACKETexpression : FOR LPAREN datos declaracion expresionlogic SEMICOLON oper RPAREN LBRACKET expression RBRACKETexpression : IF condicional LBRACKET expression RBRACKETcondicional : LPAREN expresionlogic RPARENdeclaracion : VARIABLE ASSIGNMENT expression SEMICOLONexpression : LPAREN condicional connectlog expression RPARENconnectlog : AND\n    | ORoplog : EQUAL\n    | NOTEQUAL\n    | GREATERTHAN\n    | GREATERTHANEQUAL\n    | LESSERTHAN\n    | LESSERTHANEQUALopmat : PLUS\n    | MINUS\n    | TIMES\n    | DIVIDE\n    | MODassignacion : INCREMENT\n    | DECREMENT\n    | COMPASSIGPLUS\n    | COMPASSIGMINUS\n    | COMPASSIGTIMES\n    | COMPASSIGDIVIDEterm : factorfactor : VARIABLEterm : NUMBERterm : TRUEterm : FALSEdatos : BOOL\n    | BYTE\n    | CHAR\n    | DECIMAL\n    | DOUBLE\n    | FLOAT\n    | INT\n    | LONG\n    | SBYTE\n    | SHORT\n    | UINT\n    | ULONG\n    | USHORTfactor : NUMBER PLUS NUMBER\n    | NUMBER MINUS NUMBER\n    | NUMBER TIMES NUMBER\n    | NUMBER DIVIDE NUMBER\n    | NUMBER MOD NUMBERexpression : NUMBER EQUAL NUMBER\n    | NUMBER NOTEQUAL NUMBER\n    | NUMBER GREATERTHAN NUMBER\n    | NUMBER GREATERTHANEQUAL NUMBER\n    | NUMBER LESSERTHAN NUMBER\n    | NUMBER LESSERTHANEQUAL NUMBER\n    | TRUE AND TRUE\n    | TRUE OR TRUE\n    | TRUE AND FALSE\n    | TRUE OR FALSE\n    | FALSE AND FALSE\n    | FALSE OR FALSE\n    | TRUE EQUAL TRUE\n    | TRUE EQUAL FALSE\n    | FALSE EQUAL FALSE\n    | FALSE EQUAL TRUE\n    | TRUE NOTEQUAL TRUE\n    | TRUE NOTEQUAL FALSE\n    | FALSE NOTEQUAL FALSE\n    | FALSE NOTEQUAL TRUE'
    
_lr_action_items = {'VARIABLE':([0,3,8,11,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,55,58,95,96,97,99,125,127,134,137,141,],[7,50,56,66,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-34,-35,-36,-37,-38,-39,7,66,-29,-30,-31,-32,-33,-23,-24,-25,-26,-27,-28,66,-21,-22,7,66,7,50,7,7,-19,66,136,140,7,]),'WHILE':([0,36,38,39,40,41,42,52,53,55,95,97,99,141,],[9,9,-29,-30,-31,-32,-33,-21,-22,9,9,9,9,9,]),'FOR':([0,36,38,39,40,41,42,52,53,55,95,97,99,141,],[10,10,-29,-30,-31,-32,-33,-21,-22,10,10,10,10,10,]),'IF':([0,36,38,39,40,41,42,52,53,55,95,97,99,141,],[12,12,-29,-30,-31,-32,-33,-21,-22,12,12,12,12,12,]),'LPAREN':([0,9,10,11,12,36,38,39,40,41,42,52,53,55,95,97,99,141,],[11,58,59,58,58,11,-29,-30,-31,-32,-33,-21,-22,11,11,11,11,11,]),'NUMBER':([0,11,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,55,58,68,69,70,71,72,73,74,75,76,77,78,95,97,99,125,127,141,],[13,65,13,65,-29,-30,-31,-32,-33,-23,-24,-25,-26,-27,-28,65,-21,-22,13,65,100,101,102,103,104,105,106,107,108,109,110,13,13,13,-19,65,13,]),'TRUE':([0,11,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,55,58,79,80,81,82,85,86,95,97,99,125,127,141,],[14,63,14,89,-29,-30,-31,-32,-33,-23,-24,-25,-26,-27,-28,63,-21,-22,14,63,111,113,115,117,122,124,14,14,14,-19,63,14,]),'FALSE':([0,11,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,55,58,79,80,81,82,83,84,85,86,95,97,99,125,127,141,],[15,64,15,90,-29,-30,-31,-32,-33,-23,-24,-25,-26,-27,-28,64,-21,-22,15,64,112,114,116,118,119,120,121,123,15,15,15,-19,64,15,]),'BOOL':([0,36,38,39,40,41,42,52,53,55,59,95,97,99,141,],[17,17,-29,-30,-31,-32,-33,-21,-22,17,17,17,17,17,17,]),'BYTE':([0,36,38,39,40,41,42,52,53,55,59,95,97,99,141,],[18,18,-29,-30,-31,-32,-33,-21,-22,18,18,18,18,18,18,]),'CHAR':([0,36,38,39,40,41,42,52,53,55,59,95,97,99,141,],[19,19,-29,-30,-31,-32,-33,-21,-22,19,19,19,19,19,19,]),'DECIMAL':([0,36,38,39,40,41,42,52,53,55,59,95,97,99,141,],[20,20,-29,-30,-31,-32,-33,-21,-22,20,20,20,20,20,20,]),'DOUBLE':([0,36,38,39,40,41,42,52,53,55,59,95,97,99,141,],[21,21,-29,-30,-31,-32,-33,-21,-22,21,21,21,21,21,21,]),'FLOAT':([0,36,38,39,40,41,42,52,53,55,59,95,97,99,141,],[22,22,-29,-30,-31,-32,-33,-21,-22,22,22,22,22,22,22,]),'INT':([0,36,38,39,40,41,42,52,53,55,59,95,97,99,141,],[23,23,-29,-30,-31,-32,-33,-21,-22,23,23,23,23,23,23,]),'LONG':([0,36,38,39,40,41,42,52,53,55,59,95,97,99,141,],[24,24,-29,-30,-31,-32,-33,-21,-22,24,24,24,24,24,24,]),'SBYTE':([0,36,38,39,40,41,42,52,53,55,59,95,97,99,141,],[25,25,-29,-30,-31,-32,-33,-21,-22,25,25,25,25,25,25,]),'SHORT':([0,36,38,39,40,41,42,52,53,55,59,95,97,99,141,],[26,26,-29,-30,-31,-32,-33,-21,-22,26,26,26,26,26,26,]),'UINT':([0,36,38,39,40,41,42,52,53,55,59,95,97,99,141,],[27,27,-29,-30,-31,-32,-33,-21,-22,27,27,27,27,27,27,]),'ULONG':([0,36,38,39,40,41,42,52,53,55,59,95,97,99,141,],[28,28,-29,-30,-31,-32,-33,-21,-22,28,28,28,28,28,28,]),'USHORT':([0,36,38,39,40,41,42,52,53,55,59,95,97,99,141,],[29,29,-29,-30,-31,-32,-33,-21,-22,29,29,29,29,29,29,]),'INCREMENT':([0,7,36,38,39,40,41,42,52,53,55,95,97,99,134,136,141,],[30,30,30,-29,-30,-31,-32,-33,-21,-22,30,30,30,30,30,30,30,]),'DECREMENT':([0,7,36,38,39,40,41,42,52,53,55,95,97,99,134,136,141,],[31,31,31,-29,-30,-31,-32,-33,-21,-22,31,31,31,31,31,31,31,]),'COMPASSIGPLUS':([0,7,36,38,39,40,41,42,52,53,55,95,97,99,134,136,141,],[32,32,32,-29,-30,-31,-32,-33,-21,-22,32,32,32,32,32,32,32,]),'COMPASSIGMINUS':([0,7,36,38,39,40,41,42,52,53,55,95,97,99,134,136,141,],[33,33,33,-29,-30,-31,-32,-33,-21,-22,33,33,33,33,33,33,33,]),'COMPASSIGTIMES':([0,7,36,38,39,40,41,42,52,53,55,95,97,99,134,136,141,],[34,34,34,-29,-30,-31,-32,-33,-21,-22,34,34,34,34,34,34,34,]),'COMPASSIGDIVIDE':([0,7,36,38,39,40,41,42,52,53,55,95,97,99,134,136,141,],[35,35,35,-29,-30,-31,-32,-33,-21,-22,35,35,35,35,35,35,35,]),'$end':([1,2,4,5,6,7,13,14,15,16,49,63,64,65,66,87,88,89,90,91,92,94,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,130,132,133,143,],[0,-1,-3,-5,-6,-41,-42,-9,-10,-40,-2,-9,-10,-42,-41,-4,-8,-43,-44,-7,-11,-12,-18,-63,-64,-65,-66,-67,-68,-58,-59,-60,-61,-62,-69,-71,-70,-72,-75,-76,-79,-80,-73,-74,-77,-78,-81,-82,-19,-15,-20,-17,-16,]),'SEMICOLON':([2,4,5,6,7,13,14,15,16,30,31,32,33,34,35,49,54,56,63,64,65,66,87,88,89,90,91,92,93,94,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,130,131,132,133,143,],[-1,-3,-5,-6,-41,-42,-9,-10,-40,-34,-35,-36,-37,-38,-39,-2,92,94,-9,-10,-42,-41,-4,-8,-43,-44,-7,-11,125,-12,-18,-63,-64,-65,-66,-67,-68,-58,-59,-60,-61,-62,-69,-71,-70,-72,-75,-76,-79,-80,-73,-74,-77,-78,-81,-82,-19,-15,134,-20,-17,-16,]),'RBRACKET':([2,4,5,6,7,13,14,15,16,49,63,64,65,66,87,88,89,90,91,92,94,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,130,132,133,142,143,],[-1,-3,-5,-6,-41,-42,-9,-10,-40,-2,-9,-10,-42,-41,-4,-8,-43,-44,-7,-11,-12,-18,-63,-64,-65,-66,-67,-68,-58,-59,-60,-61,-62,-69,-71,-70,-72,-75,-76,-79,-80,-73,-74,-77,-78,-81,-82,-19,130,133,-15,-20,-17,143,-16,]),'RPAREN':([2,4,5,6,7,13,14,15,16,30,31,32,33,34,35,49,61,63,64,65,66,87,88,89,90,91,92,94,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,128,130,132,133,135,139,140,143,],[-1,-3,-5,-6,-41,-42,-9,-10,-40,-34,-35,-36,-37,-38,-39,-2,98,-9,-10,-42,-41,-4,-8,-43,-44,-7,-11,-12,-18,-63,-64,-65,-66,-67,-68,-58,-59,-60,-61,-62,-69,-71,-70,-72,-75,-76,-79,-80,-73,-74,-77,-78,-81,-82,-19,132,-15,-20,-17,138,-13,-14,-16,]),'PLUS':([2,7,13,14,15,16,65,106,107,108,109,110,],[38,-41,74,-43,-44,-40,74,-58,-59,-60,-61,-62,]),'MINUS':([2,7,13,14,15,16,65,106,107,108,109,110,],[39,-41,75,-43,-44,-40,75,-58,-59,-60,-61,-62,]),'TIMES':([2,7,13,14,15,16,65,106,107,108,109,110,],[40,-41,76,-43,-44,-40,76,-58,-59,-60,-61,-62,]),'DIVIDE':([2,7,13,14,15,16,65,106,107,108,109,110,],[41,-41,77,-43,-44,-40,77,-58,-59,-60,-61,-62,]),'MOD':([2,7,13,14,15,16,65,106,107,108,109,110,],[42,-41,78,-43,-44,-40,78,-58,-59,-60,-61,-62,]),'EQUAL':([2,7,13,14,15,16,62,63,64,65,66,106,107,108,109,110,],[43,-41,68,81,85,-40,43,-43,-44,-42,-41,-58,-59,-60,-61,-62,]),'NOTEQUAL':([2,7,13,14,15,16,62,63,64,65,66,106,107,108,109,110,],[44,-41,69,82,86,-40,44,-43,-44,-42,-41,-58,-59,-60,-61,-62,]),'GREATERTHAN':([2,7,13,14,15,16,62,63,64,65,66,106,107,108,109,110,],[45,-41,70,-43,-44,-40,45,-43,-44,-42,-41,-58,-59,-60,-61,-62,]),'GREATERTHANEQUAL':([2,7,13,14,15,16,62,63,64,65,66,106,107,108,109,110,],[46,-41,71,-43,-44,-40,46,-43,-44,-42,-41,-58,-59,-60,-61,-62,]),'LESSERTHAN':([2,7,13,14,15,16,62,63,64,65,66,106,107,108,109,110,],[47,-41,72,-43,-44,-40,47,-43,-44,-42,-41,-58,-59,-60,-61,-62,]),'LESSERTHANEQUAL':([2,7,13,14,15,16,62,63,64,65,66,106,107,108,109,110,],[48,-41,73,-43,-44,-40,48,-43,-44,-42,-41,-58,-59,-60,-61,-62,]),'AND':([6,14,15,16,60,65,66,88,89,90,98,106,107,108,109,110,],[52,79,83,-40,52,-42,-41,-8,-43,-44,-18,-58,-59,-60,-61,-62,]),'OR':([6,14,15,16,60,65,66,88,89,90,98,106,107,108,109,110,],[53,80,84,-40,53,-42,-41,-8,-43,-44,-18,-58,-59,-60,-61,-62,]),'ASSIGNMENT':([7,50,],[55,55,]),'LBRACKET':([57,67,98,138,],[95,99,-18,141,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,36,55,95,97,99,141,],[1,87,93,126,128,129,142,]),'term':([0,11,36,37,51,55,58,95,97,99,127,141,],[2,62,2,88,62,2,62,2,2,2,62,2,]),'datos':([0,36,55,59,95,97,99,141,],[3,3,3,96,3,3,3,3,]),'declaracion':([0,3,36,55,95,96,97,99,141,],[4,49,4,4,4,127,4,4,4,]),'condicional':([0,9,11,12,36,55,95,97,99,141,],[5,57,60,67,5,5,5,5,5,5,]),'expresionlogic':([0,11,36,51,55,58,95,97,99,127,141,],[6,61,6,91,6,61,6,6,6,131,6,]),'assignacion':([0,7,36,55,95,97,99,134,136,141,],[8,54,8,8,8,8,8,137,139,8,]),'factor':([0,11,36,37,51,55,58,95,97,99,127,141,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'opmat':([2,],[36,]),'oplog':([2,62,],[37,37,]),'connectlog':([6,60,],[51,97,]),'oper':([134,],[135,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> term','expression',1,'p_expression_term','pruebas.py',7),
  ('expression -> datos declaracion','expression',2,'p_expression_decl','pruebas.py',10),
  ('expression -> declaracion','expression',1,'p_expression_decl','pruebas.py',11),
  ('expression -> term opmat expression','expression',3,'p_expression_opermat','pruebas.py',15),
  ('expression -> condicional','expression',1,'p_expression_condicion','pruebas.py',19),
  ('expression -> expresionlogic','expression',1,'p_expression_logic','pruebas.py',23),
  ('expression -> expresionlogic connectlog expresionlogic','expression',3,'p_expression_logic','pruebas.py',24),
  ('expresionlogic -> term oplog term','expresionlogic',3,'p_expresionlogic_rel','pruebas.py',28),
  ('expresionlogic -> TRUE','expresionlogic',1,'p_expresionlogic_bool','pruebas.py',31),
  ('expresionlogic -> FALSE','expresionlogic',1,'p_expresionlogic_bool','pruebas.py',32),
  ('expression -> VARIABLE assignacion SEMICOLON','expression',3,'p_expression_preop','pruebas.py',35),
  ('expression -> assignacion VARIABLE SEMICOLON','expression',3,'p_expression_postop','pruebas.py',39),
  ('oper -> VARIABLE assignacion','oper',2,'p_preop','pruebas.py',43),
  ('oper -> assignacion VARIABLE','oper',2,'p_postop','pruebas.py',46),
  ('expression -> WHILE condicional LBRACKET expression RBRACKET','expression',5,'p_expression_while','pruebas.py',50),
  ('expression -> FOR LPAREN datos declaracion expresionlogic SEMICOLON oper RPAREN LBRACKET expression RBRACKET','expression',11,'p_expression_for','pruebas.py',54),
  ('expression -> IF condicional LBRACKET expression RBRACKET','expression',5,'p_expression_if','pruebas.py',58),
  ('condicional -> LPAREN expresionlogic RPAREN','condicional',3,'p_condicional','pruebas.py',63),
  ('declaracion -> VARIABLE ASSIGNMENT expression SEMICOLON','declaracion',4,'p_declaracion','pruebas.py',66),
  ('expression -> LPAREN condicional connectlog expression RPAREN','expression',5,'p_logcon','pruebas.py',69),
  ('connectlog -> AND','connectlog',1,'p_connectlog','pruebas.py',72),
  ('connectlog -> OR','connectlog',1,'p_connectlog','pruebas.py',73),
  ('oplog -> EQUAL','oplog',1,'p_oplog','pruebas.py',76),
  ('oplog -> NOTEQUAL','oplog',1,'p_oplog','pruebas.py',77),
  ('oplog -> GREATERTHAN','oplog',1,'p_oplog','pruebas.py',78),
  ('oplog -> GREATERTHANEQUAL','oplog',1,'p_oplog','pruebas.py',79),
  ('oplog -> LESSERTHAN','oplog',1,'p_oplog','pruebas.py',80),
  ('oplog -> LESSERTHANEQUAL','oplog',1,'p_oplog','pruebas.py',81),
  ('opmat -> PLUS','opmat',1,'p_opmat','pruebas.py',87),
  ('opmat -> MINUS','opmat',1,'p_opmat','pruebas.py',88),
  ('opmat -> TIMES','opmat',1,'p_opmat','pruebas.py',89),
  ('opmat -> DIVIDE','opmat',1,'p_opmat','pruebas.py',90),
  ('opmat -> MOD','opmat',1,'p_opmat','pruebas.py',91),
  ('assignacion -> INCREMENT','assignacion',1,'p_assignacion','pruebas.py',94),
  ('assignacion -> DECREMENT','assignacion',1,'p_assignacion','pruebas.py',95),
  ('assignacion -> COMPASSIGPLUS','assignacion',1,'p_assignacion','pruebas.py',96),
  ('assignacion -> COMPASSIGMINUS','assignacion',1,'p_assignacion','pruebas.py',97),
  ('assignacion -> COMPASSIGTIMES','assignacion',1,'p_assignacion','pruebas.py',98),
  ('assignacion -> COMPASSIGDIVIDE','assignacion',1,'p_assignacion','pruebas.py',99),
  ('term -> factor','term',1,'p_term_factor','pruebas.py',102),
  ('factor -> VARIABLE','factor',1,'p_factor_var','pruebas.py',105),
  ('term -> NUMBER','term',1,'p_term_numero','pruebas.py',108),
  ('term -> TRUE','term',1,'p_true','pruebas.py',111),
  ('term -> FALSE','term',1,'p_false','pruebas.py',115),
  ('datos -> BOOL','datos',1,'p_datos','pruebas.py',119),
  ('datos -> BYTE','datos',1,'p_datos','pruebas.py',120),
  ('datos -> CHAR','datos',1,'p_datos','pruebas.py',121),
  ('datos -> DECIMAL','datos',1,'p_datos','pruebas.py',122),
  ('datos -> DOUBLE','datos',1,'p_datos','pruebas.py',123),
  ('datos -> FLOAT','datos',1,'p_datos','pruebas.py',124),
  ('datos -> INT','datos',1,'p_datos','pruebas.py',125),
  ('datos -> LONG','datos',1,'p_datos','pruebas.py',126),
  ('datos -> SBYTE','datos',1,'p_datos','pruebas.py',127),
  ('datos -> SHORT','datos',1,'p_datos','pruebas.py',128),
  ('datos -> UINT','datos',1,'p_datos','pruebas.py',129),
  ('datos -> ULONG','datos',1,'p_datos','pruebas.py',130),
  ('datos -> USHORT','datos',1,'p_datos','pruebas.py',131),
  ('factor -> NUMBER PLUS NUMBER','factor',3,'p_semant_MatOper','pruebas.py',134),
  ('factor -> NUMBER MINUS NUMBER','factor',3,'p_semant_MatOper','pruebas.py',135),
  ('factor -> NUMBER TIMES NUMBER','factor',3,'p_semant_MatOper','pruebas.py',136),
  ('factor -> NUMBER DIVIDE NUMBER','factor',3,'p_semant_MatOper','pruebas.py',137),
  ('factor -> NUMBER MOD NUMBER','factor',3,'p_semant_MatOper','pruebas.py',138),
  ('expression -> NUMBER EQUAL NUMBER','expression',3,'p_boolean_operations','pruebas.py',169),
  ('expression -> NUMBER NOTEQUAL NUMBER','expression',3,'p_boolean_operations','pruebas.py',170),
  ('expression -> NUMBER GREATERTHAN NUMBER','expression',3,'p_boolean_operations','pruebas.py',171),
  ('expression -> NUMBER GREATERTHANEQUAL NUMBER','expression',3,'p_boolean_operations','pruebas.py',172),
  ('expression -> NUMBER LESSERTHAN NUMBER','expression',3,'p_boolean_operations','pruebas.py',173),
  ('expression -> NUMBER LESSERTHANEQUAL NUMBER','expression',3,'p_boolean_operations','pruebas.py',174),
  ('expression -> TRUE AND TRUE','expression',3,'p_boolean_operations','pruebas.py',175),
  ('expression -> TRUE OR TRUE','expression',3,'p_boolean_operations','pruebas.py',176),
  ('expression -> TRUE AND FALSE','expression',3,'p_boolean_operations','pruebas.py',177),
  ('expression -> TRUE OR FALSE','expression',3,'p_boolean_operations','pruebas.py',178),
  ('expression -> FALSE AND FALSE','expression',3,'p_boolean_operations','pruebas.py',179),
  ('expression -> FALSE OR FALSE','expression',3,'p_boolean_operations','pruebas.py',180),
  ('expression -> TRUE EQUAL TRUE','expression',3,'p_boolean_operations','pruebas.py',181),
  ('expression -> TRUE EQUAL FALSE','expression',3,'p_boolean_operations','pruebas.py',182),
  ('expression -> FALSE EQUAL FALSE','expression',3,'p_boolean_operations','pruebas.py',183),
  ('expression -> FALSE EQUAL TRUE','expression',3,'p_boolean_operations','pruebas.py',184),
  ('expression -> TRUE NOTEQUAL TRUE','expression',3,'p_boolean_operations','pruebas.py',185),
  ('expression -> TRUE NOTEQUAL FALSE','expression',3,'p_boolean_operations','pruebas.py',186),
  ('expression -> FALSE NOTEQUAL FALSE','expression',3,'p_boolean_operations','pruebas.py',187),
  ('expression -> FALSE NOTEQUAL TRUE','expression',3,'p_boolean_operations','pruebas.py',188),
]
